# Read the raster file
crop.raster <- raster(file)
# Add the raster to the stack
#raster_stack <- stack(raster_stack, crop.raster)
crop.raster <- list()
}
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_year_dir, file_month)
if (!dir.exists(output_month_dir)) {
dir.create(output_month_dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Initialize an empty raster stack to accumulate values for each file
raster_stack <- stack()
# Loop through all the ndvi files for the current month
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# Add the raster to the stack
#raster_stack <- stack(raster_stack, crop.raster)
crop.raster <- list()
}
# take the mean of the month
#crop.mean <- mean(raster_stack, na.rm = TRUE)
crop.mean <- app(raster_stack, mean, na.rm = TRUE)
# save the output
output_file <- file.path(output_mean.dir, "all_months_mean.tif")
# writeRaster(crop.mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
#  overwrite = TRUE)
}
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_year_dir, file_month)
if (!dir.exists(output_month_dir)) {
dir.create(output_month_dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# make them rasters
cropped_ndvi_files <- lapply(nc.files, raster)
# Initialize an empty raster stack to accumulate values for each file
raster_stack <- stack(cropped_ndvi_files)
# Loop through all the ndvi files for the current month
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# Add the raster to the stack
#raster_stack <- stack(raster_stack, crop.raster)
crop.raster <- list()
}
# take the mean of the month
#crop.mean <- mean(raster_stack, na.rm = TRUE)
crop.mean <- app(raster_stack, mean, na.rm = TRUE)
# save the output
output_file <- file.path(output_mean.dir, "all_months_mean.tif")
# writeRaster(crop.mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
#  overwrite = TRUE)
}
# Initialize an empty raster stack to accumulate values for each file
raster_stack <- stack(cropped_ndvi_files)
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_year_dir, file_month)
if (!dir.exists(output_month_dir)) {
dir.create(output_month_dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# make them rasters
cropped_ndvi_files <- lapply(nc.files, raster)
cropped_ndvi_files
# make them rasters
cropped_ndvi_files <- lapply(nc.files, raster)
cropped_ndvi_files
raster_stack
# Initialize an empty raster stack to accumulate values for each file
raster_stack <- stack(cropped_ndvi_files)
# make them rasters
cropped_ndvi_files <- lapply(nc.files, raster)
# Loop through all the ndvi files for the current month
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(cropped_ndvi_files)
# Add the raster to the stack
#raster_stack <- stack(raster_stack, crop.raster)
crop.raster <- list()
}
# take the mean of the month
#crop.mean <- mean(raster_stack, na.rm = TRUE)
crop.mean <- app(crop.raster, mean, na.rm = TRUE)
# Read the raster file
crop.raster <- raster(cropped_ndvi_files)
# Set directory to folder containing all ndvi files (2010-2022)
cropped_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_2011_ndvi"
setwd(cropped_ndvi.dir)  # Corrected the directory setting
# Create a folder for the cropped NDVI files
output_mean.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = cropped_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir, file_month)
if (!dir.exists(output_month_dir)) {
dir.create(output_month_dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Make them rasters
cropped_ndvi_files <- lapply(nc.files, raster)
# Initialize an empty raster stack to accumulate values for each file
raster_stack <- stack(cropped_ndvi_files)
# Loop through all the ndvi files for the current month
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# Add the raster to the stack
raster_stack <- addLayer(raster_stack, crop.raster)
}
# Take the mean of the month
crop.mean <- mean(raster_stack, na.rm = TRUE)
# Save the output
output_file <- file.path(output_month_dir, paste0(file_month, "_mean.tif"))  # Adjusted the output file name
writeRaster(crop.mean, filename = output_file, format = "GTiff", options = c("COMPRESS=DEFLATE", "TFW=YES"), overwrite = TRUE)
}
# ......................................................................
# mean
# Set directory to folder containing all ndvi files (2010-2022)
cropped_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_2011_ndvi"
setwd(cropped_ndvi.dir)  # Corrected the directory setting
# Create a folder for the cropped NDVI files
output_mean.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = cropped_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir, file_month)
if (!dir.exists(output_month_dir)) {
dir.create(output_month_dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Make them rasters
cropped_ndvi_files <- lapply(nc.files, raster)
# Initialize an empty raster stack to accumulate values for each file
raster_stack <- stack(cropped_ndvi_files)
# Loop through all the ndvi files for the current month
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# Add the raster to the stack
raster_stack <- addLayer(raster_stack, crop.raster)
}
# Take the mean of the month
crop.mean <- mean(raster_stack, na.rm = TRUE)
# Save the output
output_file <- file.path(output_month_dir, paste0(file_month, "_mean.tif"))  # Adjusted the output file name
writeRaster(crop.mean, filename = output_file, format = "GTiff", options = c("COMPRESS=DEFLATE", "TFW=YES"), overwrite = TRUE)
}
file <- raster("2011_apr\2011_apr_mean.tif")
file <- raster("2011_apr/2011_apr_mean.tif")
file <- "2011_apr/2011_apr_mean.tif"
file <- raster("2011_apr/2011_apr_mean.tif")
file <- raster("2011_apr/2011_apr_mean.tif")
plot(file) #plot this, this doesn't work
file <- raster("../cropped_mean_ndvi/2011_apr/2011_apr_mean.tif")
plot(file) #plot this, this doesn't work
# for loop for rescaling ----
# Set directory to folder containing all ndvi files (2010-2022)
mean_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
setwd (nc.dir)
# Create a folder for the cropped NDVI files
output_mean.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/rescaled_mean_ndvi"
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = mean_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir, file_month)
if (!dir.exists(output_month_dir)) {
dir.create(output_month_dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Loop through all raster files
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# Rescale the rasters to right ndvi values
rescaled_mean <- reprojected_raster*0.0001
# Save the reprojected raster
output_file <- file.path(output_reprojected.dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
}
}
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir, file_month)
if (!dir.exists(output_month_dir)) {
dir.create(output_month_dir)
}
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir)
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# for loop for rescaling ----
# Set directory to folder containing all ndvi files (2010-2022)
mean_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
setwd (nc.dir)
# Create a folder for the cropped NDVI files
output_mean.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/rescaled_mean_ndvi"
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = mean_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir)
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Loop through all raster files
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# Rescale the rasters to right ndvi values
rescaled_mean <- reprojected_raster*0.0001
# Save the reprojected raster
output_file <- file.path(output_reprojected.dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
}
}
# turn it into a spatraster
crop.raster <- rast(crop.raster)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# for loop for rescaling ----
# Set directory to folder containing all ndvi files (2010-2022)
mean_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
setwd (nc.dir)
# Create a folder for the cropped NDVI files
output_mean.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/rescaled_mean_ndvi"
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = mean_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir)
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Loop through all raster files
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# turn it into a spatraster
crop.raster <- rast(crop.raster)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# Rescale the rasters to right ndvi values
rescaled_mean <- reprojected_raster*0.0001
# Save the reprojected raster
output_file <- file.path(output_reprojected.dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
}
}
# for loop for rescaling ----
# Set directory to folder containing all ndvi files (2010-2022)
mean_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
setwd (nc.dir)
# Create a folder for the cropped NDVI files
output_mean.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/rescaled_mean_ndvi"
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = mean_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir)
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Loop through all raster files
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# turn it into a spatraster
crop.raster <- rast(crop.raster)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# Rescale the rasters to right ndvi values
rescaled_mean <- reprojected_raster*0.0001
# Save the reprojected raster
output_file <- file.path(output_dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
}
}
# for loop for rescaling ----
# Set directory to folder containing all ndvi files (2010-2022)
mean_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
setwd (nc.dir)
# Create a folder for the cropped NDVI files
output_rescaled.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/rescaled_mean_ndvi"
if (!dir.exists(output_rescaled.dir)) {
dir.create(output_rescaled.dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = mean_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir)
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Loop through all raster files
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# turn it into a spatraster
crop.raster <- rast(crop.raster)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# Rescale the rasters to right ndvi values
rescaled_mean <- reprojected_raster*0.0001
# Save the reprojected raster
output_file <- file.path(output_rescaled.dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
}
}
# Save the reprojected raster
output_file <- file.path(output_rescaled.dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", #options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", options = c("COMPRESS=DEFLATE", "TFW=YES")
overwrite = TRUE)
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
writeRaster(rescaled_mean, filename = output_file, format = "GTiff", options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
writeRaster(rescaled_mean, filename = output_file, #format = "GTiff",
options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
# Loop through all raster files
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# turn it into a spatraster
crop.raster <- rast(crop.raster)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# Rescale the rasters to right ndvi values
rescaled_mean <- reprojected_raster*0.0001
# Save the reprojected raster
output_file <- file.path(output_rescaled.dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, #format = "GTiff",
options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
}
writeRaster(rescaled_mean, filename = output_file, #format = "GTiff",
options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
writeRaster(rescaled_mean, filename = output_file, #format = "GTiff",
options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
writeRaster(rescaled_mean, filename = output_file, #format = "GTiff",
#options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
# for loop for rescaling ----
# Set directory to folder containing all ndvi files (2010-2022)
mean_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
setwd (nc.dir)
# Create a folder for the cropped NDVI files
output_rescaled.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/rescaled_mean_ndvi"
if (!dir.exists(output_rescaled.dir)) {
dir.create(output_rescaled.dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = mean_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir)
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Loop through all raster files
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# turn it into a spatraster
crop.raster <- rast(crop.raster)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# Rescale the rasters to right ndvi values
rescaled_mean <- reprojected_raster*0.0001
# Save the reprojected raster
output_file <- file.path(output_rescaled.dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, #format = "GTiff",
#options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
}
}
# for loop for rescaling ----
# Set directory to folder containing all ndvi files (2010-2022)
mean_ndvi.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/cropped_mean_ndvi"
setwd (mean_ndvi.dir)
# Create a folder for the cropped NDVI files
output_rescaled.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/rescaled_mean_ndvi"
if (!dir.exists(output_rescaled.dir)) {
dir.create(output_rescaled.dir)
}
# List all month folders in the year directory
month_folders <- list.dirs(path = mean_ndvi.dir, full.names = TRUE, recursive = FALSE)
# Loop through each month folder
for (nc.dir in month_folders) {
# Extract month from the directory path
file_month <- tools::file_path_sans_ext(basename(nc.dir))
# Create a folder for the current month in the output directory
output_month_dir <- file.path(output_mean.dir)
if (!dir.exists(output_mean.dir)) {
dir.create(output_mean.dir)
}
# Make a list of the files in the month directory
nc.files <- list.files(path = nc.dir, pattern = "*.tif", full.names = TRUE)
# Loop through all raster files
for (file in nc.files) {
# Read the raster file
crop.raster <- raster(file)
# turn it into a spatraster
crop.raster <- rast(crop.raster)
# Reproject the raster to the CRS of jasper_shape
reprojected_raster <- terra::project(crop.raster, crs(jasper_shape), method = "near")
# Rescale the rasters to right ndvi values
rescaled_mean <- reprojected_raster*0.0001
# Save the reprojected raster
output_file <- file.path(output_rescaled.dir, basename(file))
writeRaster(rescaled_mean, filename = output_file, #format = "GTiff",
#options = c("COMPRESS=DEFLATE", "TFW=YES"),
overwrite = TRUE)
}
}
file <- raster("../rescaled_mean_ndvi/2011_apr/2011_apr_mean.tif")
file <- raster("../rescaled_mean_ndvi/2011_apr_mean.tif")
plot(file) # works!!
