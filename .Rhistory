library(terra)
#convert to spatraster object
ndvi_2010_spat <- rast(ndvi_stack)
shp <- st_read("data/CLAB_AB_2023-09-08/CLAB_AB_2023-09-08.shp")
plot(shp)
#Identify which parks are in the shapefile
shp@data[["CLAB_ID"]]
shp <- shapefile("data/CLAB_AB_2023-09-08/CLAB_AB_2023-09-08.shp")
plot(shp)
#Identify which parks are in the shapefile
shp@data[["CLAB_ID"]]
#subset yoho shapefile out
JASP <- shp[shp$CLAB_ID == "JASP", ]
#plot the specific park you want
plot(JASP)
#Import all ndvi files
# List all .nc files in the folder
ndvi_files_2018 <- list.files("2010ndvi/2010_jan",
pattern = "\\.nc$", full.names = TRUE)
# Create a raster stack
ndvi_stack <- stack(ndvi_files_2018, varname = "NDVI")
library(terra)
#convert to spatraster object
ndvi_2010_spat <- rast(ndvi_stack)
#crop the ndvi to match the extent of the jasper park
ndvi_2010_crop <- crop(ndvi_2010_spat, JASP)
#convert back spatraster to raster
ndvi_2010_raster <- as(ndvi_2010_crop, "Raster")
#get NDVI with jasper boundary
ndvi_jasper <- mask(ndvi_2010_raster, JASP)
#extract NDVI values for jasper
ndvi_values <- getValues(ndvi_jasper)
#convert NDVI values to numeric
ndvi_values <- as.numeric(ndvi_values)
#plot the NDVI values
hist(ndvi_values, main = "NDVI Distribution for Jasper Park", xlab = "NDVI")
#plot ndvi for jasper
plot(ndvi_jasper, main = "NDVI Map for Jasper Park")
#calculate the mean NDVI
mean_ndvi_jasper <- mean(ndvi_jasper, na.rm = TRUE)
#plot mean ndvi for jasper for 2018
plot(mean_ndvi_jasper, main = "Mean NDVI for Jasper Park for 2018")
#rescale the NDVI values from [0, 2500] to [-1, 1]
mean_ndvi_jasper_scaled <- scale(mean_ndvi_jasper, center = 1000, scale = 1000)
#plot mean ndvi scaled for jasper 2010
plot(mean_ndvi_jasper_scaled, main = "Mean NDVI scaled for Jasper Park for 2018")
#turn the mean into a SpatRaster
mean_ndvi_jasper_scaled <- rast(mean_ndvi_jasper_scaled)
# reproject
mean_ndvi_jasper_reproj <- terra::project(mean_ndvi_jasper_scaled, crs(JASP), method="near")
crs(JASP)
crs(mean_ndvi_jasper_scaled)
# reproject
mean_ndvi_jasper_reproj <- terra::project(mean_ndvi_jasper_scaled, crs(JASP), method="near")
plot(mean_ndvi_jasper_reproj)
# Loading packages ----
options(timeout = max(1000, getOption("timeout")))
library(lattice) # for making graphs
library(knitr) # for knitting
library(ggplot2) # for scatter plot
library(dplyr) # for pipes
library(skimr) # for skimming data
library(tidyverse) #summing
library(lubridate) #convert whole columns to dates
library(zoo) #dates as year month
library(canadianmaps) #import annotated map of Canada
library(sf) # spatial data
library(sp) #Spatial Points function
library(rstudioapi) #for creating colour palette
library(grDevices) #for creating colour palette
library(fBasics) #for creating colour palette
library(mgcv) #gam
library(terra) #shape file
library(terra)
library(sf)
library(raster)
#setwd("C:/Users/grace/Documents/GitHub/HWI_parks")
# parks = st_read('sf/parks_polygon.shp')
nc.dir = "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_jan" #assign variable
setwd(nc.dir) #setwd, only way this is working
dat.dir = list.files(pattern="*.nc", all.files=TRUE, #list all files in there
full.names=FALSE)
jan = lapply(dat.dir, raster) #to files in the directory, make jan files raster layers (varname "NDVI" was automatically chosen)
jan = stack(jan) #turn it into a raster stack
jan = rast(jan) #turn them into spatrasters
#saveRDS(jan,file ="../../rds/jan2010raster.rds")
#jan <- readRDS("../../rds/jan2010raster.rds")
names(jan) #turns jan into a list --> only NDVI now :)
jasper_shape <- readRDS("../../rds/jasper.rds")
# jan.crop = crop(jan2010_reproject, jasper_shape, mask = TRUE) #my jasper shape is appearing but looks weird
#crop and mask similar, mask is cut pieces that fell outside
jan.crop = crop(jan, jasper_shape, mask = TRUE) # this one is only my jasper shape
# jan.mask = mask(jan2010_reproject, jasper_rast)
# plot(jan.mask) #mask didn't work --> everything's gone when I mask them
plot(jan.crop)
# reproject 2010 jan into park projection ----
jan_reproject <- terra::project(jan.crop, crs(jasper_shape), method="near") # error:invalid latitude?
# reproject 2010 jan into park projection ----
jan_reproject <- terra::project(jan.crop, crs(jasper_shape), method="near") # error:invalid latitude?
plot(jan_reproject)
saveRDS(jan_reproject,file ="../../rds/jan2010reproject.rds", overwrite = TRUE)
saveRDS(jan_reproject,file ="../../rds/jan2010reproject.rds", overwrite = TRUE)
#setwd("C:/Users/grace/Documents/GitHub/HWI_parks")
saveRDS(jan_reproject, file = "C:/Users/grace/Documents/GitHub/HWI_parks/rds/jan_reproject.rds", overwrite = TRUE)
# taking mean for 2010 jan ----
jan.crop.mean = app(jan_reproject, mean, na.rm = TRUE) #get the mean for 2010 jan
names(jan2010mean) # turn it into a list
plot(jan.crop.mean) #it's greener than it should be after ndvi *0.0001? 0.25 should not be green...
saveRDS(jan.crop.mean,file ="../../rds/jan2010mean.rds")
jan2010mean <- readRDS("../../rds/jan2010mean.rds")
plot(jan2010mean) #got the mean for 2010 jan --> change units for ndvi
saveRDS(jan_reproject,file ="../../rds/jan2010reproject.rds", overwrite = TRUE)
saveRDS(jan_reproject,file ="../../rds/jan2010reproject.rds")
jan2010_reproject <- readRDS("../../rds/jan2010reproject.rds")
plot(jan2010_reproject)
plot(jan2010mean) #got the mean for 2010 jan --> change units for ndvi
# Loading packages ----
options(timeout = max(1000, getOption("timeout")))
library(lattice) # for making graphs
library(knitr) # for knitting
library(ggplot2) # for scatter plot
library(dplyr) # for pipes
library(skimr) # for skimming data
library(tidyverse) #summing
library(lubridate) #convert whole columns to dates
library(zoo) #dates as year month
library(canadianmaps) #import annotated map of Canada
library(sf) # spatial data
library(sp) #Spatial Points function
library(rstudioapi) #for creating colour palette
library(grDevices) #for creating colour palette
library(fBasics) #for creating colour palette
library(mgcv) #gam
library(terra) #shape file
library(terra)
library(sf)
library(raster)
jan2010mean <- readRDS("../../rds/jan2010mean.rds")
#setwd("C:/Users/grace/Documents/GitHub/HWI_parks")
# parks = st_read('sf/parks_polygon.shp')
nc.dir = "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_jan" #assign variable
setwd(nc.dir) #setwd, only way this is working
dat.dir = list.files(pattern="*.nc", all.files=TRUE, #list all files in there
full.names=FALSE)
jan2010_reproject <- readRDS("../../rds/jan2010reproject.rds")
plot(jan2010_reproject)
jan2010mean <- readRDS("../../rds/jan2010mean.rds")
plot(jan2010mean) #got the mean for 2010 jan --> change units for ndvi
mean_ndvi_jasper_scaled <- jan2010mean * 0.0001
plot(mean_ndvi_jasper_scaled)
saveRDS(mean_ndvi_jasper_scaled,file ="../../rds/jan2010mean_scaled.rds")
jan2010mean_scaled <- readRDS("../../rds/jan2010mean_scaled.rds")
plot(jan2010mean_scaled)
# Loading packages ----
options(timeout = max(1000, getOption("timeout")))
library(lattice) # for making graphs
library(knitr) # for knitting
library(ggplot2) # for scatter plot
library(dplyr) # for pipes
library(skimr) # for skimming data
library(tidyverse) #summing
library(lubridate) #convert whole columns to dates
library(zoo) #dates as year month
library(canadianmaps) #import annotated map of Canada
library(sf) # spatial data
library(sp) #Spatial Points function
library(rstudioapi) #for creating colour palette
library(grDevices) #for creating colour palette
library(fBasics) #for creating colour palette
library(mgcv) #gam
library(terra) #shape file
# importing data
animals_involved <- read.csv("data/pca-human-wildlife-coexistence-animals-involved-detailed-records-2010-2021.csv")
library(terra)
library(sf)
library(raster)
#setwd("C:/Users/grace/Documents/GitHub/HWI_parks")
# parks = st_read('sf/parks_polygon.shp')
nc.dir = "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_jan" #assign variable
setwd(nc.dir) #setwd, only way this is working
dat.dir = list.files(pattern="*.nc", all.files=TRUE, #list all files in there
full.names=FALSE)
jan2010_reproject <- readRDS("../../rds/jan2010reproject.rds")
plot(jan2010_reproject)
jan2010mean_scaled <- readRDS("../../rds/jan2010mean_scaled.rds")
plot(jan2010mean_scaled)
# build for loops for all months in 2010 in jasper ----
# feb
# Set the directory containing the NetCDF files
nc.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_feb"
# List all files in the directory with the specified pattern
dat.dir <- list.files(path = nc.dir, pattern = "*.nc", full.names = TRUE)
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(file_path, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Turn it into a list and store the result
result_list[[file_path]] <- feb.crop.mean
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
}
# List all files in the directory with the specified pattern
dat.dir <- list.files(path = nc.dir, pattern = "*.nc", full.names = FALSE)
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(file_path, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Turn it into a list and store the result
result_list[[file_path]] <- feb.crop.mean
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
}
# build for loops for all months in 2010 in jasper ----
# feb
# Set the directory containing the NetCDF files
nc.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_feb"
setwd(nc.dir)
# List all files in the directory with the specified pattern
dat.dir <- list.files(path = nc.dir, pattern = "*.nc", full.names = FALSE)
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(file_path, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Turn it into a list and store the result
result_list[[file_path]] <- feb.crop.mean
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
}
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(dat.dir, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Turn it into a list and store the result
result_list[[file_path]] <- feb.crop.mean
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
}
#setwd("C:/Users/grace/Documents/GitHub/HWI_parks")
# parks = st_read('sf/parks_polygon.shp')
nc.dir = "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_jan" #assign variable
setwd(nc.dir) #setwd, only way this is working
dat.dir = list.files(pattern="*.nc", all.files=TRUE, #list all files in there
full.names=FALSE)
jan = lapply(dat.dir, raster) #to files in the directory, make jan files raster layers (varname "NDVI" was automatically chosen)
jan = stack(jan) #turn it into a raster stack
jan = rast(jan) #turn them into spatrasters
#saveRDS(jan,file ="../../rds/jan2010raster.rds")
#jan <- readRDS("../../rds/jan2010raster.rds")
names(jan) #turns jan into a list --> only NDVI now :)
jasper_shape <- readRDS("../../rds/jasper.rds")
# jan.crop = crop(jan2010_reproject, jasper_shape, mask = TRUE) #my jasper shape is appearing but looks weird
#crop and mask similar, mask is cut pieces that fell outside
jan.crop = crop(jan, jasper_shape, mask = TRUE) # this one is only my jasper shape
# jan.mask = mask(jan2010_reproject, jasper_rast)
# plot(jan.mask) #mask didn't work --> everything's gone when I mask them
plot(jan.crop)
# reproject 2010 jan into park projection ----
jan_reproject <- terra::project(jan.crop, crs(jasper_shape), method="near") # error:invalid latitude?
plot(jan_reproject)
# taking mean for 2010 jan ----
jan.crop.mean = app(jan_reproject, mean, na.rm = TRUE) #get the mean for 2010 jan
# Turn it into a list and store the result
JASP2010jan_result_list[[nc.dir]] <- jan.crop.mean
names(jan2010mean) # turn it into a list
# taking mean for 2010 jan ----
jan.crop.mean = app(jan_reproject, mean, na.rm = TRUE) #get the mean for 2010 jan
names(jan2010mean) # turn it into a list
names(jan.crop.mean) # turn it into a list
# Turn it into a list and store the result
JASP2010jan_result_list[[nc.dir]] <- jan.crop.mean
# build for loops for all months in 2010 in jasper ----
# feb
# Set the directory containing the NetCDF files
nc.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_feb"
setwd(nc.dir)
# List all files in the directory with the specified pattern
dat.dir <- list.files(path = nc.dir, pattern = "*.nc", full.names = FALSE)
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(dat.dir, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
}
warnings()
# build for loops for all months in 2010 in jasper ----
# feb
# Set the directory containing the NetCDF files
nc.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_feb"
setwd(nc.dir)
# List all files in the directory with the specified pattern
dat.dir <- list.files(path = nc.dir, pattern = "*.nc", full.names = FALSE)
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(dat.dir, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
#saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
saveRDS(mean_ndvi_scaled, file = "../../rds/_jasper_2010feb_scaled.rds")
}
# build for loops for all months in 2010 in jasper ----
# feb
# Set the directory containing the NetCDF files
nc.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_feb"
setwd(nc.dir)
# List all files in the directory with the specified pattern
dat.dir <- list.files(path = nc.dir, pattern = "*.nc", full.names = FALSE)
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(dat.dir, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
#saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
saveRDS(mean_ndvi_scaled, file = "../../rds/jasper_2010feb_scaled.rds")
JASPfeb2010mean_scaled <- readRDS("../../jasper_2010feb_scaled.rds")
}
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(dat.dir, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
#saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
saveRDS(mean_ndvi_scaled, file = "../../rds/jasper_2010feb_scaled.rds")
JASPfeb2010mean_scaled <- readRDS("../../jasper_2010feb_scaled.rds")
}
warnings()
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# build for loops for all months in 2010 in jasper ----
# feb
# Set the directory containing the NetCDF files
nc.dir <- "C:/Users/grace/Documents/GitHub/HWI_parks/2010ndvi/2010_feb"
setwd(nc.dir)
# List all files in the directory with the specified pattern
dat.dir <- list.files(path = nc.dir, pattern = "*.nc", full.names = FALSE)
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(dat.dir, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
#saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
saveRDS(mean_ndvi_scaled, file = "../../rds/jasper_2010feb_scaled.rds")
JASPfeb2010mean_scaled <- readRDS("../../jasper_2010feb_scaled.rds")
}
jasper_shape <- readRDS("../../rds/jasper.rds")
# for loop for all the files in the feb2010 directory
for (file_path in dat.dir) {
# Read the NetCDF file and create raster layers
feb <- lapply(dat.dir, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
#saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
saveRDS(mean_ndvi_scaled, file = "../../rds/jasper_2010feb_scaled.rds")
JASPfeb2010mean_scaled <- readRDS("../../jasper_2010feb_scaled.rds")
}
# Read the NetCDF file and create raster layers
feb <- lapply(dat.dir, raster)
# Turn it into a raster stack
feb <- stack(feb)
# Turn them into spatrasters
feb <- rast(feb)
# Crop the raster with jasper shape
feb.crop <- crop(feb, jasper_shape, mask = TRUE)
# Reproject the cropped raster
feb_reproject <- terra::project(feb.crop, crs(jasper_shape), method = "near")
plot(feb_reproject)
# Get the mean for 2010 Feb
feb.crop.mean <- app(feb_reproject, mean, na.rm = TRUE)
# Scale the mean NDVI
mean_ndvi_scaled <- feb.crop.mean * 0.0001
plot(mean_ndvi_scaled)
# Save the scaled mean NDVI
#saveRDS(mean_ndvi_scaled, file = paste0("../../rds/", basename(file_path), "_jasper_2010feb_scaled.rds"))
saveRDS(mean_ndvi_scaled, file = "../../rds/jasper_2010feb_scaled.rds")
JASPfeb2010mean_scaled <- readRDS("../../jasper_2010feb_scaled.rds")
JASPfeb2010mean_scaled <- readRDS("../../rds/jasper_2010feb_scaled.rds")
